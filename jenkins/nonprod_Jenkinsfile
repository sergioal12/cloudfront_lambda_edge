#!/usr/bin/env groovy
@Library('utils@master') _
node('linux') {
   stage('Preparation') {
      git credentialsId: 'intl_gituser', url: 'https://intl_gituser@bitbucket-latam.aws.lmig.com/scm/anpolserv/co-plsv-front-infr.git', branch: 'nonprod'
      sh 'npm --version'
      sh 'aws --version'
      sh 'npm install'
      sh 'sls --version'
      sh 'pwd'
      sh 'ls'
      sh 'ls'
   }
   stage('Build') {
      deployToNonProd {
         withAWS(credentials:getAWSCredentialID(environment:"${env.APPENV}"), region:'us-east-1') {
            sh 'export SLS_DEBUG=true'
            sh 'dir'
            sh 'ls'
            sh 'pwd'
            sh "sls deploy -v --stage ${env.APPENV.replace('_', '')}" // Values: dev, non_prod and prod
         }
         withSonarQubeEnv('sonarqube') {
            // TODO sh 'sonar-scanner -Dsonar.projectKey=andino-flex-mailer -Dsonar.projectName=andino-flex-mailer -Dsonar.projectVersion=0.0.1 -Dsonar.sources=src'
         }
      }
   }

   stage('Zip Files && Artifactory upload') {
			//zip dir: '', glob: '', zipFile: 'intl-co-plsv-infr-dev.zip'
           sh 'cd ..'
           sh 'pwd'
           sh 'ls'
           sh 'zip -r co-plsv-front-infr.zip . -x co-plsv-front-infr/jenkins/dev_Jenkinsfile co-plsv-front-infr/jenkins/preprod_Jenkinsfile co-plsv-front-infr/.serverless co-plsv-front-infr/.git/**'
           sh 'pwd'
           sh 'ls'
			  def artifacts = ['co-plsv-front-infr.zip']		
		     artifactoryUploadFiles files:artifacts,version:ARTIFACT_VERSION,packageType:'npm',appName:'co-plsv-infra'              
   }
}